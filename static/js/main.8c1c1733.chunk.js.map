{"version":3,"sources":["components/Topbar/Topbar.jsx","components/Button/Button.jsx","components/InputText/InputText.jsx","components/HeroSection/HeroSection.jsx","components/ListItems/ListItems.jsx","components/List/List.jsx","components/App.jsx","index.js"],"names":["Topbar","id","icon","faHeart","color","Button","props","onClick","className","InputText","onChange","value","type","placeholder","HeroSection","onInputChange","onButtonClick","inputTextValue","ListItems","item","itemIndex","completed","task","List","items","onListItemsClick","map","index","App","useState","todos","setTodo","textInput","setTextInput","addTodo","e","target","newTodos","Array","from","completeTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAeeA,EAVA,WACd,OACC,qBAAKC,GAAG,UAAR,SACC,sBAAKA,GAAG,WAAR,4BACgB,cAAC,IAAD,CAAiBC,KAAMC,IAASC,MAAM,wBCG1CC,G,YATA,SAACC,GAAW,IAClBC,EAAYD,EAAZC,QACR,OACC,wBAAQC,UAAU,SAASD,QAASA,EAApC,mBCUaE,G,MAbG,SAACH,GAAW,IACrBI,EAAoBJ,EAApBI,SAAUC,EAAUL,EAAVK,MAClB,OACC,uBACCC,KAAK,OACLJ,UAAU,QACVK,YAAY,+BACZH,SAAUA,EACVC,MAAOA,MCOKG,EAbK,SAACR,GAAW,IACvBS,EAAiDT,EAAjDS,cAAeC,EAAkCV,EAAlCU,cAAeC,EAAmBX,EAAnBW,eACtC,OACC,yBAAQhB,GAAG,aAAX,UACC,oBAAIA,GAAG,mBAAP,wBACA,sBAAKA,GAAG,oBAAR,UACC,cAAC,EAAD,CAAWS,SAAUK,EAAeJ,MAAOM,IAC3C,cAAC,EAAD,CAAQV,QAASS,WCENE,G,MAXG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMZ,EAAyB,EAAzBA,QAASa,EAAgB,EAAhBA,UACnC,OACC,oBACCb,QAAS,kBAAMA,EAAQa,IACvBZ,UAAS,yBAAoBW,EAAKE,UAAY,YAAc,IAF7D,SAIEF,EAAKG,SCUMC,G,MAfF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBACtB,OACC,oBAAIxB,GAAG,WAAP,SACEuB,EAAME,KAAI,SAACP,EAAMQ,GAAP,OACV,cAAC,EAAD,CAECP,UAAWO,EACXR,KAAMA,EACNZ,QAASkB,GAHJE,UCuCKC,EA1CH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACVC,EADU,KACHC,EADG,OAEiBF,mBAAS,IAF1B,mBAEVG,EAFU,KAECC,EAFD,KAYXC,EAAU,SAACZ,GAA6B,IAAvBD,EAAsB,wDACvCC,IAELS,EAAQ,GAAD,mBAAKD,GAAL,CAAY,CAAER,OAAMD,gBAC3BY,EAAa,MAad,OACC,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,CACClB,cA7B0B,SAACoB,GAC7BF,EAAaE,EAAEC,OAAOzB,QA6BpBM,eAAgBe,EAChBhB,cA3B0B,WAC5BkB,EAAQF,MA4BP,cAAC,EAAD,CAAMP,iBAZwB,SAACE,IANZ,SAACP,GACrB,IAAMiB,EAAWC,MAAMC,KAAKT,GAC5BO,EAASjB,GAAWC,WAAagB,EAASjB,GAAWC,UACrDU,EAAQM,GAIRG,CAAab,IAWqCH,MAAOM,QCvC3DW,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.8c1c1733.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Topbar.style.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Topbar = () => {\n\treturn (\n\t\t<nav id=\"app-nav\">\n\t\t\t<div id=\"app-logo\">\n\t\t\t\tJust show some <FontAwesomeIcon icon={faHeart} color=\"rebeccapurple\" />\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default Topbar;\n","import React from \"react\";\nimport \"./Button.style.css\";\n\nconst Button = (props) => {\n\tconst { onClick } = props;\n\treturn (\n\t\t<button className=\"button\" onClick={onClick}>\n\t\t\tAdd\n\t\t</button>\n\t);\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./InputText.style.css\";\n\nconst InputText = (props) => {\n\tconst { onChange, value } = props;\n\treturn (\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tclassName=\"input\"\n\t\t\tplaceholder=\"Do not forget 2 kg of Hiliib\"\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t/>\n\t);\n};\n\nexport default InputText;\n","import React from \"react\";\nimport \"./HeroSection.style.css\";\nimport Button from \"../Button/Button\";\nimport InputText from \"../InputText/InputText\";\n\nconst HeroSection = (props) => {\n\tconst { onInputChange, onButtonClick, inputTextValue } = props;\n\treturn (\n\t\t<header id=\"app-header\">\n\t\t\t<h1 id=\"app-header-title\">Adeeg List</h1>\n\t\t\t<div id=\"app-header-fields\">\n\t\t\t\t<InputText onChange={onInputChange} value={inputTextValue} />\n\t\t\t\t<Button onClick={onButtonClick} />\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default HeroSection;\n","import React from \"react\";\nimport \"./ListItems.style.css\";\n\nconst ListItems = ({ item, onClick, itemIndex }) => {\n\treturn (\n\t\t<li\n\t\t\tonClick={() => onClick(itemIndex)}\n\t\t\tclassName={`app-list-items ${item.completed ? \"completed\" : \"\"}`}\n\t\t>\n\t\t\t{item.task}\n\t\t</li>\n\t);\n};\n\nexport default ListItems;\n","import React from \"react\";\nimport ListItems from \"../ListItems/ListItems\";\nimport \"./List.style.css\";\n\nconst List = ({ items, onListItemsClick }) => {\n\treturn (\n\t\t<ul id=\"app-list\">\n\t\t\t{items.map((item, index) => (\n\t\t\t\t<ListItems\n\t\t\t\t\tkey={index}\n\t\t\t\t\titemIndex={index}\n\t\t\t\t\titem={item}\n\t\t\t\t\tonClick={onListItemsClick}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default List;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Topbar from \"./Topbar/Topbar\";\nimport HeroSection from \"./HeroSection/HeroSection\";\nimport List from \"./List/List\";\n\nconst App = () => {\n\tconst [todos, setTodo] = useState([]);\n\tconst [textInput, setTextInput] = useState(\"\");\n\n\tconst onInputChangeHandler = (e) => {\n\t\tsetTextInput(e.target.value);\n\t};\n\n\tconst onButtonClickHandler = () => {\n\t\taddTodo(textInput);\n\t};\n\n\tconst addTodo = (task, completed = false) => {\n\t\tif (!task) return;\n\n\t\tsetTodo([...todos, { task, completed }]);\n\t\tsetTextInput(\"\");\n\t};\n\n\tconst completeTodo = (itemIndex) => {\n\t\tconst newTodos = Array.from(todos);\n\t\tnewTodos[itemIndex].completed = !newTodos[itemIndex].completed;\n\t\tsetTodo(newTodos);\n\t};\n\n\tconst onListItemsClickHandler = (index) => {\n\t\tcompleteTodo(index);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Topbar />\n\t\t\t<HeroSection\n\t\t\t\tonInputChange={onInputChangeHandler}\n\t\t\t\tinputTextValue={textInput}\n\t\t\t\tonButtonClick={onButtonClickHandler}\n\t\t\t/>\n\t\t\t<List onListItemsClick={onListItemsClickHandler} items={todos} />\n\t\t</>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}